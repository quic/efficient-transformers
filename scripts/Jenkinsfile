pipeline 
{

    agent{
        node 
        {
            label 'qeff_node'
        }
    }
    environment 
    {
        CONTAINER_NAME = "qeff_container"
    }
    
    stages 
    {
        stage('Install QEfficient')
        {
            steps
            {

                script
                {
                    sh '''
                    . ~/.bashrc
                    docker run --privileged -dit --name ${CONTAINER_NAME} -v ./:/data -v  ${huggingface_hub_path}:${docker_huggingface_hub_path} ${docker_latest}:master_latest
                    docker exec ${CONTAINER_NAME} bash -c "
                    cd /data &&
                    . /opt/qeff-env/bin/activate &&
                    pip install --upgrade pip setuptools &&
                    pip install .[test]"
                    '''
                }
            }
        }
        stage('Test')
        {
                steps
                {
                    //todo(ochougul): Increase when MQ tests are enabled 
		            timeout(time: 420, unit: 'MINUTES') 
                    {
                    sh '''
                    docker exec ${CONTAINER_NAME} bash -c "
                    cd /data &&
                    . /opt/qeff-env/bin/activate &&
                    export TOKENIZERS_PARALLELISM=false &&
                    pytest -W ignore -s -v tests -o junit_logging=all --junitxml=tests/tests_log.xml &&
                    deactivate &&
                    exit" 
                    '''
                    
                }
            }
        }
    }
    post 
    {
         always 
         {
            script
            {
                try 
                {
                    sh '''
                    docker rm -f ${CONTAINER_NAME}
                    sudo chown -R ubuntu ./*
                    '''
                } 
                catch (error) 
                {
                    echo "Failed to delete container ${CONTAINER_NAME}: ${error}"
                }
            }
            
            junit 'tests/tests_log.xml'
            echo 'Cleaning Workspace'
            deleteDir()
         }
    }
       
}
